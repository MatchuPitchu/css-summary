@use 'base' as *;

.homes {
  grid-column: center-start / center-end;
  margin: 15rem 0;

  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  grid-gap: 7rem;
}

.home {
  background-color: $color-grey-light-1;

  // using implicit grid, only define grid-columns
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-row-gap: 3.5rem;

  // put like icon over img -> define for both exact position with grid-row/grid-column OR grid-area
  &__img {
    width: 100%;
    // grid-row: 1 / 2;
    // grid-column: 1 / -1;
    grid-area: 1 / 1 / 2 / -1;
    z-index: 1;
  }

  &__like {
    // grid-row: 1 / 2;
    // grid-column: 2 / 3;
    grid-area: 1 / 2 / 2 / 3;
    justify-self: end; // align only this grid item inside its grid cell
    z-index: 2;
    fill: $color-primary;
    height: 2.5rem;
    width: 2.5rem;
    margin: 1rem;
  }

  // put name over img
  &__name {
    grid-row: 1 / 2;
    grid-column: 1 / -1;
    grid-area: 1 / 1 / 2 / -1;
    justify-self: center; // center grid item inside of its grid cell
    align-self: end; // align vertically grid item at the end of its cell
    z-index: 2;
    width: 80%;
    font-family: $font-display;
    font-size: 1.6rem;
    font-weight: 400;
    color: #fff;
    text-align: center;
    padding: 1.25rem;
    background-color: $color-secondary;
    transform: translateY(50%); // move bellow with 50% of height of grid item
  }

  &__location,
  &__rooms {
    margin-top: 2.5rem; // add margin to have a similar gap everywhere in the grid
  }

  &__location,
  &__rooms,
  &__area,
  &__price {
    display: flex;
    align-items: center;
    gap: 1rem;
    font-size: 1.5rem;
    margin-left: 2rem;

    svg {
      fill: $color-primary;
      height: 2rem;
      width: 2rem;
    }
  }

  &__btn {
    grid-column: 1 / -1;
  }
}
