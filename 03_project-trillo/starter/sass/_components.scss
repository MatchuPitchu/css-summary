@use './abstracts/mixins' as *;
@use './base' as *;

// LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

// SEARCH
.search {
  flex: 0 0 40%;
  display: flex;
  align-items: center;
  justify-content: center;

  // put searchbar on new line below
  @include respond($bp-smallest) {
    order: 1;
    flex: 0 0 100%;
    background-color: var(--color-grey-light-2);
  }

  &__input {
    font-family: inherit; // input elements do NOT inherit automatically, have to set it
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    margin-right: -3.25rem; // to move btn on top of input field
    padding: 0.7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all 0.2s;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    &::placeholder {
      font-weight: 100;
      color: var(--color-grey-dark-3);
    }
  }

  // adjecent sibling selector
  &__input:focus + &__btn {
    background-color: var(--color-grey-light-3);
  }

  &__btn {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  // style svg
  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3); // color svg icon
  }
}

// USER NAVIGATION
.user-nav {
  align-self: stretch; // stretch this flex item of header component to occupy whole height of header
  display: flex;
  align-items: center;

  & > * {
    display: flex;
    align-items: center;
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
  }

  & > *:hover {
    background-color: var(--color-grey-light-3);
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

// SIDE NAVIGATION
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  @include respond($bp-medium) {
    display: flex;
    margin: 0;
  }

  &__item {
    position: relative;

    @include respond($bp-medium) {
      flex: 1;
    }

    &:not(:last-child) {
      margin-bottom: 0.5rem;

      @include respond($bp-medium) {
        flex: 1;
        margin-bottom: 0;
      }
    }
  }

  &__item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    // scale only on y axis based on transform-origin which is set to center by default
    transform: scaleY(0);
    // define multiple transitions, width with delay that it starts after first one is finished
    transition: transform 0.2s, width 0.4s 0.2s cubic-bezier(1, 0, 0, 1), background-color 0.1s;
  }

  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    width: 100%;
  }

  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  // common pattern to style <a>
  &__link:link,
  &__link:visited {
    display: flex;
    align-items: center;
    gap: 0.7rem 2rem;
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    padding: 1.5rem 3rem;
    position: relative; // z-index works only with specified position
    z-index: 1;

    @include respond($bp-medium) {
      justify-content: center;
      padding: 2rem;
    }

    @include respond($bp-small) {
      flex-direction: column;
      padding: 1.5rem 0.5rem;
    }
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    // color of parent element OR if same element has a defined color property;
    // when color parent element changes (e.g. for :hover), then currentColor would change here
    fill: currentColor;

    @include respond($bp-small) {
      width: 2.25rem;
      height: 2.25rem;
    }
  }
}

// LEGAL TEXT
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;

  @include respond($bp-medium) {
    display: none;
  }
}

// GALLERY
.gallery {
  display: flex;

  &__photo {
    display: block; // img must always be block/inline-block, to avoid small space underneath what happens with inline-element
    width: 100%;
  }
}

// HOTEL OVERVIEW
.overview {
  display: flex;
  align-items: center;
  border-bottom: var(--line);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;

    @include respond($bp-small) {
      font-size: 1.8rem;
      padding: 1.25rem 2rem;
    }
  }

  &__stars {
    display: flex;
    align-items: center;
    margin-right: auto; // to create space at right or left side of flex item
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__icon-location {
    margin-right: 1.5rem;
  }

  &__location {
    display: flex;
    align-items: center;
    font-size: 1.2rem;
  }

  &__rating {
    align-self: stretch; // stretch flex item over whole height
    display: flex; // center content of .overview__rating
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: var(--color-primary);
    color: #fff;
    margin-left: 3rem;
    padding: 0 2.25rem;

    @include respond($bp-small) {
      padding: 0 1.5rem;
    }
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px;

    @include respond($bp-small) {
      font-size: 1.8rem;
    }
  }

  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;
  }
}

// BUTTON INLINE
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit; // inherit it from parent element
  border-bottom: 1px solid currentColor; // same border color as color property
  background-color: transparent;
  cursor: pointer;
  transition: all 0.2s;

  & > span {
    margin-left: 3px;
    transition: margin 0.2s;
  }

  &:hover {
    // border color will be also updated because of currentColor value
    color: var(--color-grey-dark-1);

    span {
      margin-left: 8px;
    }
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25);
  }
  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

// PARAGRAPH
// :last-of-type pseudo class selects last child element in `paragraph` parent element
// :last-child includes all children of `paragraph` parent and only applies for last child
.paragraph:not(:last-of-type) {
  margin-bottom: 2rem;
}

// LIST
.list {
  display: flex;
  flex-flow: row wrap;
  gap: 1rem;
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);

  &__item {
    flex: 0 0 calc(50% - 1rem);
    margin-bottom: 0.7rem;
  }

  &__item::before {
    content: '';
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: 0.7rem;

    // INSERT SVG IN CSS
    // older brwosers - problem: can NOT adjust color of svg
    background-image: url(../img/chevron-thin-right.svg);
    background-size: cover;

    // newer browsers - mask properties (-> in 2022 nearly every browser supports it)
    @supports (-webkit-mask-image: url()) or (mask-image: url()) {
      background-color: var(--color-primary);
      -webkit-mask-image: url(../img/chevron-thin-right.svg);
      -webkit-mask-size: cover;
      mask-image: url(../img/chevron-thin-right.svg);
      mask-size: cover;
      background-image: none;
    }
  }
}

// RECOMMEND
.recommend {
  display: flex;
  align-items: center;
  font-size: 1.3rem;
  color: var(--color-grey-darl-3);

  &__count {
    margin-right: auto;
  }

  &__friends {
    display: flex;
  }

  &__photo {
    box-sizing: content-box; // now border is added on top and does NOT shrink the content (= image)
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid #fff;

    // OVERLAPPING IMAGES
    &:not(:last-child) {
      margin-right: -1.5rem;
    }
  }
}

// REVIEWS
.review {
  position: relative;
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  margin-bottom: 3.5rem;
  overflow: hidden;

  @include respond($bp-medium) {
    padding: 2rem;
    margin-bottom: 3rem;
  }

  &__text {
    margin-bottom: 2rem;
    position: relative; // Z-INDEX only works with position property
    z-index: 10;
  }

  &__user {
    display: flex;
    align-items: center;
  }

  &__photo {
    height: 4.5rem;
    width: 4.5rem;
    border-radius: 50%;
    margin-right: 1.5rem;
  }

  &__user-box {
    margin-right: auto;
  }

  &__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: 0.4rem;
  }

  &__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3);
  }

  &__rating {
    font-size: 2.2rem;
    font-weight: 300;
    color: var(--color-primary);
  }

  &::before {
    content: '\201C'; // quotation mark as HTML entities
    position: absolute;
    top: 6.5rem;
    left: -1rem;
    width: 100%;
    height: 100%;
    font-family: sans-serif;
    font-size: 20rem;
    line-height: 1rem;
    color: var(--color-grey-light-2);
    z-index: 1;
  }
}

// CALL TO ACTION
.cta {
  padding: 3.5rem 0;
  text-align: center;

  @include respond($bp-medium) {
    padding: 2.5rem 0;
  }

  &__book-now {
    font-size: 2rem;
    font-weight: 300;
    text-transform: uppercase;
    margin-bottom: 2.5rem;
  }
}

// BUTTON WITH NICE HOVER EFFECT
.btn {
  font-size: 1.5rem;
  font-weight: 300;
  text-transform: uppercase;
  border-radius: 100px;
  border: none;
  background-image: linear-gradient(
    to right,
    var(--color-primary-light),
    var(--color-primary-dark)
  );
  color: #fff;
  cursor: pointer;
  position: relative;
  overflow: hidden;

  & > * {
    display: inline-block; // convert span to inline-block to use padding top/bottom
    height: 100%;
    width: 100%;
    transition: all 0.2s;
  }

  &__visible {
    padding: 2rem 7.5rem;
  }

  &__invisible {
    position: absolute;
    left: 0;
    top: -100%; // move up whole height of element
    padding: 2rem 0;
  }

  &:hover {
    background-image: linear-gradient(
      to right,
      var(--color-primary-dark),
      var(--color-primary-light)
    );
  }

  &:hover > &__visible {
    transform: translateY(100%);
  }

  &:hover > &__invisible {
    top: 0;
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
}
